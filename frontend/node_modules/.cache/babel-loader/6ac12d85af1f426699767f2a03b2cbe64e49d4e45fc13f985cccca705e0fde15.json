{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siddharth\\\\Documents\\\\GitHub\\\\WhisperNet\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport FingerprintJS from '@fingerprintjs/fingerprintjs';\nimport * as EncryptionUtils from './encryptionUtils';\nimport * as MessageUtils from './messageUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_NODE_URL = process.env.REACT_APP_BASE_NODE_URL || \"http://localhost:5000\";\n\n// Initialize the fingerprint agent\nconst fpPromise = FingerprintJS.load();\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [recipient, setRecipient] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [connected, setConnected] = useState(false);\n  const [status, setStatus] = useState('Checking relay status...');\n  const [deviceId, setDeviceId] = useState('');\n  const [connectionDetails, setConnectionDetails] = useState({});\n  const [showConnectionInfo, setShowConnectionInfo] = useState(false);\n  const [securityAlert, setSecurityAlert] = useState(null);\n  const [typing, setTyping] = useState(false);\n  const [relayServerUrl, setRelayServerUrl] = useState('Unknown');\n  const [availableRelays, setAvailableRelays] = useState([]);\n  const [activeRelay, setActiveRelay] = useState(null);\n  const [relayConnection, setRelayConnection] = useState(null);\n  const [relayStatus, setRelayStatus] = useState('checking');\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [recipientStatus, setRecipientStatus] = useState({\n    exists: false,\n    online: false\n  });\n  const [isCheckingUsername, setIsCheckingUsername] = useState(false);\n  const [usernameAvailable, setUsernameAvailable] = useState(true);\n\n  // Encryption state\n  const [encryptionEnabled, setEncryptionEnabled] = useState(true);\n  const [keyPair, setKeyPair] = useState(null);\n  const [publicKeyBase64, setPublicKeyBase64] = useState(null);\n  const [contactKeys, setContactKeys] = useState({});\n  const [pendingMessages, setPendingMessages] = useState([]);\n  const [showNewDeviceWarning, setShowNewDeviceWarning] = useState(false);\n  const [newDeviceUsername, setNewDeviceUsername] = useState('');\n  const [offlineMessageEnabled, setOfflineMessageEnabled] = useState(true);\n  const socketRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n  const pingIntervalRef = useRef(null);\n  const encryptionKeyRef = useRef({});\n  const pendingKeyExchangeRef = useRef([]);\n\n  // Get device fingerprint and initialize encryption on component mount\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        // Generate device fingerprint\n        const fp = await fpPromise;\n        const result = await fp.get();\n        const visitorId = result.visitorId;\n        setDeviceId(visitorId);\n        localStorage.setItem('deviceId', visitorId);\n\n        // Initialize encryption keys\n        const storedKeyPair = localStorage.getItem('keyPair');\n        if (storedKeyPair) {\n          // Use existing keys if available\n          const parsedKeyPair = JSON.parse(storedKeyPair);\n          setKeyPair(parsedKeyPair);\n          const importedPublicKey = await EncryptionUtils.importPublicKey(parsedKeyPair.publicKey);\n          const exportedPublicKeyBase64 = await EncryptionUtils.exportPublicKeyBase64(importedPublicKey);\n          setPublicKeyBase64(exportedPublicKeyBase64);\n        } else {\n          // Generate new keys if none exist\n          const newKeyPair = await EncryptionUtils.generateKeyPair();\n          const publicKeyJwk = await EncryptionUtils.exportKeyToJwk(newKeyPair.publicKey);\n          const privateKeyJwk = await EncryptionUtils.exportKeyToJwk(newKeyPair.privateKey);\n          const keyPairToStore = {\n            publicKey: publicKeyJwk,\n            privateKey: privateKeyJwk\n          };\n          localStorage.setItem('keyPair', JSON.stringify(keyPairToStore));\n          setKeyPair(keyPairToStore);\n          const exportedPublicKeyBase64 = await EncryptionUtils.exportPublicKeyBase64(newKeyPair.publicKey);\n          setPublicKeyBase64(exportedPublicKeyBase64);\n        }\n\n        // Load stored contact keys\n        const storedContactKeys = localStorage.getItem('contactKeys');\n        if (storedContactKeys) {\n          setContactKeys(JSON.parse(storedContactKeys));\n        }\n\n        // Load pending messages\n        const storedPendingMessages = localStorage.getItem('pendingMessages');\n        if (storedPendingMessages) {\n          setPendingMessages(JSON.parse(storedPendingMessages));\n        }\n      } catch (error) {\n        console.error('Error initializing app:', error);\n        setStatus('Error initializing encryption. Please refresh.');\n      }\n    };\n    initializeApp();\n  }, []);\n\n  // Check relay status on initial load\n  useEffect(() => {\n    if (deviceId) {\n      checkRelayStatus();\n    }\n  }, [deviceId]);\n\n  // Function to check relay status\n  const checkRelayStatus = async () => {\n    setStatus('Checking base node status...');\n    setRelayStatus('checking');\n    try {\n      // First try HTTP health check\n      const response = await axios.get(`${BASE_NODE_URL}/health`, {\n        timeout: 5000\n      });\n      if (response.status === 200) {\n        setRelayStatus('online');\n        setStatus('Base node online. Please login.');\n        return;\n      }\n    } catch (error) {\n      console.log('HTTP health check failed, trying socket connection:', error.message);\n    }\n\n    // Fallback to socket connection test\n    const tempSocket = io(BASE_NODE_URL, {\n      transports: ['websocket', 'polling'],\n      reconnectionAttempts: 2,\n      reconnectionDelay: 1000,\n      timeout: 5000,\n      forceNew: true\n    });\n    const connectionTimeout = setTimeout(() => {\n      setRelayStatus('timeout');\n      setStatus('Connection timeout. Base node may be offline.');\n      tempSocket.disconnect();\n    }, 8000);\n    tempSocket.on('connect', () => {\n      clearTimeout(connectionTimeout);\n      setRelayStatus('online');\n      setStatus('Base node online. Please login.');\n      tempSocket.disconnect();\n    });\n    tempSocket.on('connect_error', err => {\n      clearTimeout(connectionTimeout);\n      console.error('Socket connection error:', err);\n      setRelayStatus('offline');\n      setStatus('Base node offline. Please try again later.');\n      tempSocket.disconnect();\n    });\n  };\n\n  // Main socket connection effect\n  useEffect(() => {\n    if (connected && username && deviceId) {\n      connectToBaseNode();\n    }\n    return () => {\n      if (socketRef.current) {\n        clearInterval(pingIntervalRef.current);\n        socketRef.current.disconnect();\n        socketRef.current = null;\n      }\n    };\n  }, [connected, username, deviceId]);\n  const connectToBaseNode = () => {\n    // Clear any previous connection\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    console.log('Connecting to base node:', BASE_NODE_URL);\n    setStatus('Connecting to base node...');\n    socketRef.current = io(BASE_NODE_URL, {\n      transports: ['websocket', 'polling'],\n      reconnectionAttempts: 5,\n      reconnectionDelay: 2000,\n      query: {\n        deviceId,\n        username\n      },\n      forceNew: true\n    });\n\n    // Connection event handlers\n    socketRef.current.on('connect', () => {\n      console.log('Connected to base node with socket ID:', socketRef.current.id);\n      setStatus('Connected to base node');\n      setConnectionDetails({\n        socketId: socketRef.current.id,\n        transport: socketRef.current.io.engine.transport.name,\n        baseNodeUrl: BASE_NODE_URL\n      });\n\n      // Register with base node\n      socketRef.current.emit('registerUser', {\n        username,\n        deviceId\n      }, response => {\n        console.log('Registration response:', response);\n        if (response && response.success) {\n          setStatus('Registered successfully');\n\n          // Get initial data\n          getOnlineUsers();\n\n          // Get available relay servers\n          getAvailableRelays();\n          startPingInterval();\n        } else {\n          const errorMsg = (response === null || response === void 0 ? void 0 : response.reason) || 'Registration failed';\n          setStatus(`Registration failed: ${errorMsg}`);\n          setSecurityAlert({\n            username: username,\n            message: `Registration failed: ${errorMsg}`\n          });\n        }\n      });\n    });\n    socketRef.current.on('connect_error', err => {\n      console.error('Base node connection error:', err);\n      setStatus(`Connection failed: ${err.message}`);\n      setRelayStatus('offline');\n    });\n    socketRef.current.on('disconnect', reason => {\n      console.log('Disconnected from base node:', reason);\n      setStatus(`Disconnected: ${reason}`);\n      setRelayStatus('offline');\n      clearInterval(pingIntervalRef.current);\n\n      // Don't auto-reconnect if user manually disconnected\n      if (reason !== 'io client disconnect') {\n        setTimeout(() => {\n          if (connected) {\n            connectToBaseNode();\n          }\n        }, 3000);\n      }\n    });\n\n    // Message handling\n    socketRef.current.on('message', data => {\n      console.log('Received message:', data);\n      const {\n        from,\n        message,\n        fromDeviceId,\n        timestamp\n      } = data;\n\n      // Security check for device ID changes\n      const previousMessages = messages.filter(msg => msg.from === from);\n      if (previousMessages.length > 0 && previousMessages[0].fromDeviceId && previousMessages[0].fromDeviceId !== fromDeviceId) {\n        setSecurityAlert({\n          username: from,\n          message: `Warning: ${from} appears to be messaging from a different device!`\n        });\n      }\n      setMessages(msgs => [...msgs, {\n        from,\n        message,\n        fromDeviceId,\n        timestamp: new Date(timestamp || new Date())\n      }]);\n    });\n\n    // Handle relay server list updates\n    socketRef.current.on('relayList', relays => {\n      console.log('Received relay list:', relays);\n      setAvailableRelays(relays);\n\n      // If we're not connected to a relay yet, connect to the best one\n      if (!activeRelay && relays.length > 0) {\n        connectToRelay(relays[0]);\n      }\n    });\n\n    // Handle relay status updates\n    socketRef.current.on('relayStatusUpdate', data => {\n      console.log('Relay status update:', data);\n      const {\n        relayId,\n        status\n      } = data;\n      setAvailableRelays(prev => {\n        const updated = prev.map(relay => {\n          if (relay.relayId === relayId) {\n            return {\n              ...relay,\n              status\n            };\n          }\n          return relay;\n        });\n\n        // If the relay we're connected to went offline, connect to another one\n        if (activeRelay && activeRelay.relayId === relayId && status === 'offline') {\n          const onlineRelays = updated.filter(r => r.status === 'online');\n          if (onlineRelays.length > 0) {\n            // Schedule a reconnect to avoid doing it during this state update\n            setTimeout(() => connectToRelay(onlineRelays[0]), 100);\n          }\n        }\n        return updated;\n      });\n    });\n\n    // User status updates\n    socketRef.current.on('userStatusUpdate', data => {\n      console.log('User status update:', data);\n      const {\n        username: user,\n        online\n      } = data;\n      if (user === recipient) {\n        setRecipientStatus(prev => ({\n          ...prev,\n          online\n        }));\n      }\n\n      // Update online users list\n      setOnlineUsers(prev => {\n        if (online && !prev.includes(user)) {\n          return [...prev, user];\n        } else if (!online && prev.includes(user)) {\n          return prev.filter(u => u !== user);\n        }\n        return prev;\n      });\n    });\n\n    // Typing indicators\n    socketRef.current.on('userTyping', data => {\n      const {\n        username: typingUser\n      } = data;\n      if (typingUser === recipient) {\n        setTyping(true);\n        clearTimeout(typingTimeoutRef.current);\n        typingTimeoutRef.current = setTimeout(() => setTyping(false), 3000);\n      }\n    });\n\n    // Error handling\n    socketRef.current.on('error', error => {\n      console.error('Socket error:', error);\n      setSecurityAlert({\n        username: 'System',\n        message: `Connection error: ${error.message || 'Unknown error'}`\n      });\n    });\n  };\n  const getOnlineUsers = () => {\n    if (socketRef.current) {\n      socketRef.current.emit('getOnlineUsers', {}, users => {\n        console.log('Online users:', users);\n        if (Array.isArray(users)) {\n          setOnlineUsers(users);\n        }\n      });\n    }\n  };\n\n  // Get available relay servers from base node\n  const getAvailableRelays = () => {\n    if (socketRef.current) {\n      socketRef.current.emit('getRelays', {}, relays => {\n        console.log('Available relays:', relays);\n        if (Array.isArray(relays)) {\n          setAvailableRelays(relays);\n\n          // Connect to the first available relay if we're not connected to any\n          const onlineRelays = relays.filter(relay => relay.status === 'online');\n          if (onlineRelays.length > 0 && !activeRelay) {\n            connectToRelay(onlineRelays[0]);\n          }\n        }\n      });\n    }\n  };\n\n  // Connect to a relay server\n  const connectToRelay = relay => {\n    // Disconnect from current relay if connected\n    if (relayConnection) {\n      relayConnection.disconnect();\n      setRelayConnection(null);\n    }\n    const relayUrl = `http://${relay.ip}:${relay.port}`;\n    console.log(`Connecting to relay server: ${relayUrl}`);\n    setStatus(`Connecting to relay: ${relay.relayId}...`);\n    setRelayServerUrl(relayUrl);\n    const socket = io(relayUrl, {\n      transports: ['websocket', 'polling'],\n      reconnectionAttempts: 5,\n      reconnectionDelay: 2000,\n      query: {\n        deviceId,\n        username\n      },\n      forceNew: true\n    });\n    socket.on('connect', () => {\n      console.log(`Connected to relay ${relay.relayId} with socket ID: ${socket.id}`);\n      setStatus(`Connected to relay: ${relay.relayId}`);\n\n      // Register with the relay\n      socket.emit('register', {\n        username,\n        deviceId\n      }, response => {\n        console.log('Relay registration response:', response);\n        if (response && response.success) {\n          setActiveRelay(relay);\n          setRelayConnection(socket);\n          setStatus(`Registered with relay: ${relay.relayId}`);\n\n          // Store relay info for future use\n          localStorage.setItem('lastRelay', JSON.stringify(relay));\n        } else {\n          const errorMsg = (response === null || response === void 0 ? void 0 : response.reason) || 'Registration with relay failed';\n          setStatus(`Relay registration failed: ${errorMsg}`);\n          socket.disconnect();\n        }\n      });\n    });\n    socket.on('connect_error', err => {\n      console.error(`Relay connection error: ${err.message}`);\n      setStatus(`Relay connection failed: ${err.message}`);\n\n      // Try another relay if available\n      const otherRelays = availableRelays.filter(r => r.relayId !== relay.relayId && r.status === 'online');\n      if (otherRelays.length > 0) {\n        setTimeout(() => connectToRelay(otherRelays[0]), 1000);\n      } else {\n        setStatus('No available relays. Using base node directly.');\n      }\n    });\n    socket.on('disconnect', reason => {\n      console.log(`Disconnected from relay: ${reason}`);\n      setStatus(`Disconnected from relay: ${reason}`);\n      setActiveRelay(null);\n\n      // Try to reconnect to another relay if available\n      const onlineRelays = availableRelays.filter(r => r.status === 'online');\n      if (onlineRelays.length > 0) {\n        setTimeout(() => connectToRelay(onlineRelays[0]), 2000);\n      }\n    });\n\n    // Message handling\n    socket.on('receiveMessage', data => {\n      console.log('Received message from relay:', data);\n      const {\n        from,\n        message,\n        fromDeviceId,\n        timestamp\n      } = data;\n\n      // Security check for device ID changes\n      const previousMessages = messages.filter(msg => msg.from === from);\n      if (previousMessages.length > 0 && previousMessages[0].fromDeviceId && previousMessages[0].fromDeviceId !== fromDeviceId) {\n        setSecurityAlert({\n          username: from,\n          message: `Warning: ${from} appears to be messaging from a different device!`\n        });\n      }\n      setMessages(msgs => [...msgs, {\n        from,\n        message,\n        fromDeviceId,\n        timestamp: new Date(timestamp || new Date())\n      }]);\n    });\n\n    // Typing indicators\n    socket.on('userTyping', data => {\n      const {\n        username: typingUser\n      } = data;\n      if (typingUser === recipient) {\n        setTyping(true);\n        clearTimeout(typingTimeoutRef.current);\n        typingTimeoutRef.current = setTimeout(() => setTyping(false), 3000);\n      }\n    });\n    return socket;\n  };\n  const startPingInterval = () => {\n    pingIntervalRef.current = setInterval(() => {\n      if (socketRef.current && socketRef.current.connected) {\n        socketRef.current.emit('ping', {}, response => {\n          if (response) {\n            console.log('Ping response:', response);\n          }\n        });\n      }\n    }, 30000);\n  };\n\n  // Check recipient status\n  const checkRecipientStatus = () => {\n    if (!recipient) {\n      setRecipientStatus({\n        exists: false,\n        online: false\n      });\n      return;\n    }\n\n    // Check through relay if connected, otherwise through base node\n    const socket = relayConnection || socketRef.current;\n    if (!socket) {\n      setRecipientStatus({\n        exists: false,\n        online: false\n      });\n      return;\n    }\n    const checkMethod = relayConnection ? 'checkRecipient' : 'checkUser';\n    socket.emit(checkMethod, {\n      username: recipient\n    }, response => {\n      console.log('Recipient check response:', response);\n      setRecipientStatus(response || {\n        exists: false,\n        online: false\n      });\n    });\n  };\n\n  // Effect to check recipient status whenever recipient changes\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (connected && recipient) {\n        checkRecipientStatus();\n      }\n    }, 500); // Debounce\n\n    return () => clearTimeout(timeoutId);\n  }, [connected, recipient]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleUsernameSubmit = e => {\n    e.preventDefault();\n    if (username.trim() && relayStatus === 'online') {\n      setConnected(true);\n    } else if (relayStatus !== 'online') {\n      setSecurityAlert({\n        username: 'System',\n        message: 'Cannot connect: Base node is offline'\n      });\n    }\n  };\n  const handleRecipientChange = e => {\n    setRecipient(e.target.value.trim());\n  };\n  const handleSend = e => {\n    e.preventDefault();\n    if (!recipient || !message.trim()) return;\n    const messageData = {\n      to: recipient,\n      message: message.trim(),\n      deviceId,\n      timestamp: new Date().toISOString()\n    };\n    console.log('Sending message:', messageData);\n\n    // Send through relay if connected, otherwise through base node\n    const socket = relayConnection || socketRef.current;\n    if (!socket) {\n      setSecurityAlert({\n        username: 'System',\n        message: 'No active connection to send message'\n      });\n      return;\n    }\n\n    // Log connection details before sending\n    console.log(`Connection established. Sending through ${relayConnection ? 'relay' : 'base node'}...`);\n    socket.emit('sendMessage', messageData, response => {\n      console.log('Send message response:', response);\n      if (response && (response.success || response.delivered)) {\n        // Add message to local state\n        setMessages(msgs => [...msgs, {\n          from: username,\n          message: message.trim(),\n          fromDeviceId: deviceId,\n          timestamp: new Date()\n        }]);\n        setMessage('');\n      } else {\n        const errorMsg = (response === null || response === void 0 ? void 0 : response.reason) || 'Message delivery failed';\n        setSecurityAlert({\n          username: recipient,\n          message: `Failed to send message: ${errorMsg}`\n        });\n      }\n    });\n  };\n  const handleMessageChange = e => {\n    setMessage(e.target.value);\n\n    // Send typing indicator through relay if connected, otherwise through base node\n    const socket = relayConnection || socketRef.current;\n    if (socket && recipient && e.target.value.length > 0) {\n      socket.emit('typing', {\n        to: recipient\n      });\n    }\n  };\n  const handleDisconnect = () => {\n    setConnected(false);\n\n    // Disconnect from relay if connected\n    if (relayConnection) {\n      relayConnection.disconnect();\n      setRelayConnection(null);\n      setActiveRelay(null);\n    }\n\n    // Disconnect from base node\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    setMessages([]);\n    setOnlineUsers([]);\n    setRecipientStatus({\n      exists: false,\n      online: false\n    });\n    setStatus('Disconnected');\n\n    // Clear stored relay info\n    localStorage.removeItem('lastRelay');\n  };\n  const dismissAlert = () => {\n    setSecurityAlert(null);\n  };\n  const retryConnection = () => {\n    checkRelayStatus();\n  };\n\n  // Utility functions\n  const getTimestamp = () => {\n    const now = new Date();\n    return `[${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}]`;\n  };\n  const formatMessageTime = timestamp => {\n    if (!timestamp) return getTimestamp();\n    const date = new Date(timestamp);\n    return `[${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}:${date.getSeconds().toString().padStart(2, '0')}]`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: '#0a0e14',\n      minHeight: '100vh',\n      color: '#a2aabc',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontFamily: '\"Fira Code\", monospace'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#171c28',\n        padding: 32,\n        borderRadius: 8,\n        minWidth: 400,\n        maxWidth: 600,\n        boxShadow: '0 4px 30px rgba(0, 255, 170, 0.15)',\n        border: '1px solid rgba(0, 255, 170, 0.3)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: 24\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: 0,\n            color: '#5ccfe6',\n            fontFamily: '\"Fira Code\", monospace',\n            letterSpacing: '1px'\n          },\n          children: \"WhisperNet_\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            padding: '4px 8px',\n            borderRadius: 4,\n            background: relayStatus === 'online' ? '#1c4b3c' : '#4b1c1c',\n            color: relayStatus === 'online' ? '#5ccfe6' : '#ff8f40',\n            cursor: 'pointer'\n          },\n          onClick: () => setShowConnectionInfo(!showConnectionInfo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this), showConnectionInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#0d1117',\n          padding: 12,\n          borderRadius: 4,\n          fontSize: 12,\n          fontFamily: 'monospace',\n          marginBottom: 16,\n          border: '1px solid #1e2d3d'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Status: \", status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 13\n        }, this), connected && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Socket ID: \", connectionDetails.socketId || 'unknown']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Transport: \", connectionDetails.transport || 'unknown']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Base Node: \", connectionDetails.baseNodeUrl || BASE_NODE_URL]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Base Node Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: relayStatus === 'online' ? '#bae67e' : '#ff8f40'\n            },\n            children: relayStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 13\n        }, this), deviceId && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Device ID: \", deviceId.substring(0, 8), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 26\n        }, this), connected && onlineUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8\n          },\n          children: [\"Online Users: \", onlineUsers.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 11\n      }, this), securityAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#4b1c1c',\n          color: '#ff8f40',\n          padding: 12,\n          borderRadius: 4,\n          marginBottom: 16,\n          position: 'relative',\n          fontSize: 14\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: 20\n          },\n          children: securityAlert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            position: 'absolute',\n            top: 8,\n            right: 8,\n            background: 'none',\n            border: 'none',\n            color: '#ff8f40',\n            cursor: 'pointer',\n            fontSize: 16\n          },\n          onClick: dismissAlert,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 11\n      }, this), !connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 16,\n            fontSize: 14,\n            color: '#5ccfe6'\n          },\n          children: [getTimestamp(), \" Initializing secure connection...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUsernameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '100%',\n              padding: 10,\n              marginBottom: 12,\n              borderRadius: 4,\n              border: '1px solid #1e2d3d',\n              background: '#0d1117',\n              color: '#a2aabc',\n              fontSize: 16,\n              fontFamily: '\"Fira Code\", monospace',\n              boxSizing: 'border-box'\n            },\n            placeholder: \"Enter username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '100%',\n              padding: 10,\n              borderRadius: 4,\n              background: relayStatus === 'online' ? 'linear-gradient(90deg, #5ccfe6, #bae67e)' : '#636b78',\n              color: '#171c28',\n              fontWeight: 'bold',\n              fontSize: 16,\n              border: 'none',\n              cursor: relayStatus === 'online' ? 'pointer' : 'not-allowed',\n              fontFamily: '\"Fira Code\", monospace'\n            },\n            type: \"submit\",\n            disabled: relayStatus !== 'online',\n            children: relayStatus === 'online' ? 'AUTHENTICATE' : 'BASE NODE OFFLINE'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 13\n        }, this), relayStatus !== 'online' && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: '100%',\n            padding: 8,\n            marginTop: 8,\n            borderRadius: 4,\n            background: '#4b1c1c',\n            color: '#ff8f40',\n            fontSize: 14,\n            border: 'none',\n            cursor: 'pointer',\n            fontFamily: '\"Fira Code\", monospace'\n          },\n          onClick: retryConnection,\n          children: \"RETRY CONNECTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12,\n            color: '#ff3333',\n            textAlign: 'center',\n            fontSize: 14\n          },\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSend,\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            marginBottom: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              marginBottom: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                flex: 1,\n                padding: 10,\n                borderRadius: 4,\n                border: '1px solid #1e2d3d',\n                background: '#0d1117',\n                color: '#a2aabc',\n                fontSize: 14,\n                marginRight: 8,\n                fontFamily: '\"Fira Code\", monospace'\n              },\n              placeholder: \"Recipient username\",\n              value: recipient,\n              onChange: handleRecipientChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 17\n            }, this), recipient && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginLeft: 8,\n                fontSize: 12\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 8,\n                  height: 8,\n                  borderRadius: '50%',\n                  background: recipientStatus.online ? '#bae67e' : recipientStatus.exists ? '#ff8f40' : '#ff3333',\n                  marginRight: 6\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 21\n              }, this), recipientStatus.exists ? recipientStatus.online ? 'ONLINE' : 'OFFLINE' : 'NOT FOUND']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                flex: 1,\n                padding: 10,\n                borderRadius: 4,\n                border: '1px solid #1e2d3d',\n                background: '#0d1117',\n                color: '#a2aabc',\n                fontSize: 14,\n                marginRight: 8,\n                fontFamily: '\"Fira Code\", monospace'\n              },\n              placeholder: \"Type a message\",\n              value: message,\n              onChange: handleMessageChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                padding: '0 18px',\n                borderRadius: 4,\n                background: recipientStatus.online ? 'linear-gradient(90deg, #5ccfe6, #bae67e)' : '#636b78',\n                color: '#171c28',\n                fontWeight: 'bold',\n                fontSize: 14,\n                border: 'none',\n                cursor: recipientStatus.online ? 'pointer' : 'not-allowed',\n                fontFamily: '\"Fira Code\", monospace'\n              },\n              type: \"submit\",\n              disabled: !recipientStatus.online,\n              children: \"SEND\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }, this), typing && recipient && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            color: '#5ccfe6',\n            marginBottom: 8\n          },\n          children: [recipient, \" is typing...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#0d1117',\n            borderRadius: 4,\n            padding: 12,\n            minHeight: 200,\n            maxHeight: 350,\n            overflowY: 'auto',\n            marginBottom: 12,\n            border: '1px solid #1e2d3d',\n            fontFamily: 'monospace'\n          },\n          children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#5ccfe6',\n              fontSize: 14\n            },\n            children: [getTimestamp(), \" Connection established. Awaiting transmission...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 17\n          }, this) : messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 12,\n              padding: 8,\n              borderRadius: 4,\n              background: msg.from === username ? 'rgba(92, 207, 230, 0.1)' : 'rgba(186, 230, 126, 0.1)',\n              borderLeft: msg.from === username ? '2px solid #5ccfe6' : '2px solid #bae67e'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: 4,\n                fontSize: 12\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: msg.from === username ? '#5ccfe6' : '#bae67e',\n                  fontWeight: 'bold'\n                },\n                children: msg.from === username ? 'YOU' : msg.from\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#636b78'\n                },\n                children: formatMessageTime(msg.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                wordBreak: 'break-word',\n                fontSize: 14\n              },\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              padding: '8px 16px',\n              borderRadius: 4,\n              background: '#4b1c1c',\n              color: '#ff8f40',\n              fontSize: 14,\n              border: 'none',\n              cursor: 'pointer',\n              fontFamily: '\"Fira Code\", monospace'\n            },\n            onClick: handleDisconnect,\n            children: \"DISCONNECT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 976,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: '#636b78',\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: 8,\n                height: 8,\n                borderRadius: '50%',\n                background: status.includes('Connected') || status.includes('Registered') ? '#bae67e' : '#ff3333',\n                marginRight: 6\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 17\n            }, this), status.includes('Connected') || status.includes('Registered') ? 'SECURE CONNECTION' : 'CONNECTION LOST']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 676,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Pjo5vPzAsJRAgfqN2wvLFH7JFIg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","axios","FingerprintJS","EncryptionUtils","MessageUtils","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_NODE_URL","process","env","REACT_APP_BASE_NODE_URL","fpPromise","load","App","_s","username","setUsername","recipient","setRecipient","message","setMessage","messages","setMessages","connected","setConnected","status","setStatus","deviceId","setDeviceId","connectionDetails","setConnectionDetails","showConnectionInfo","setShowConnectionInfo","securityAlert","setSecurityAlert","typing","setTyping","relayServerUrl","setRelayServerUrl","availableRelays","setAvailableRelays","activeRelay","setActiveRelay","relayConnection","setRelayConnection","relayStatus","setRelayStatus","onlineUsers","setOnlineUsers","recipientStatus","setRecipientStatus","exists","online","isCheckingUsername","setIsCheckingUsername","usernameAvailable","setUsernameAvailable","encryptionEnabled","setEncryptionEnabled","keyPair","setKeyPair","publicKeyBase64","setPublicKeyBase64","contactKeys","setContactKeys","pendingMessages","setPendingMessages","showNewDeviceWarning","setShowNewDeviceWarning","newDeviceUsername","setNewDeviceUsername","offlineMessageEnabled","setOfflineMessageEnabled","socketRef","messagesEndRef","typingTimeoutRef","pingIntervalRef","encryptionKeyRef","pendingKeyExchangeRef","initializeApp","fp","result","get","visitorId","localStorage","setItem","storedKeyPair","getItem","parsedKeyPair","JSON","parse","importedPublicKey","importPublicKey","publicKey","exportedPublicKeyBase64","exportPublicKeyBase64","newKeyPair","generateKeyPair","publicKeyJwk","exportKeyToJwk","privateKeyJwk","privateKey","keyPairToStore","stringify","storedContactKeys","storedPendingMessages","error","console","checkRelayStatus","response","timeout","log","tempSocket","transports","reconnectionAttempts","reconnectionDelay","forceNew","connectionTimeout","setTimeout","disconnect","on","clearTimeout","err","connectToBaseNode","current","clearInterval","query","id","socketId","transport","engine","name","baseNodeUrl","emit","success","getOnlineUsers","getAvailableRelays","startPingInterval","errorMsg","reason","data","from","fromDeviceId","timestamp","previousMessages","filter","msg","length","msgs","Date","relays","connectToRelay","relayId","prev","updated","map","relay","onlineRelays","r","user","includes","u","typingUser","users","Array","isArray","relayUrl","ip","port","socket","otherRelays","setInterval","checkRecipientStatus","checkMethod","timeoutId","_messagesEndRef$curre","scrollIntoView","behavior","handleUsernameSubmit","e","preventDefault","trim","handleRecipientChange","target","value","handleSend","messageData","to","toISOString","delivered","handleMessageChange","handleDisconnect","removeItem","dismissAlert","retryConnection","getTimestamp","now","getHours","toString","padStart","getMinutes","getSeconds","formatMessageTime","date","style","background","minHeight","color","display","alignItems","justifyContent","fontFamily","children","padding","borderRadius","minWidth","maxWidth","boxShadow","border","marginBottom","margin","letterSpacing","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","cursor","onClick","substring","marginTop","join","position","marginRight","top","right","onSubmit","width","boxSizing","placeholder","onChange","required","fontWeight","type","disabled","textAlign","flexDirection","flex","marginLeft","height","maxHeight","overflowY","i","borderLeft","wordBreak","ref","_c","$RefreshReg$"],"sources":["C:/Users/siddharth/Documents/GitHub/WhisperNet/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport FingerprintJS from '@fingerprintjs/fingerprintjs';\nimport * as EncryptionUtils from './encryptionUtils';\nimport * as MessageUtils from './messageUtils';\n\nconst BASE_NODE_URL = process.env.REACT_APP_BASE_NODE_URL || \"http://localhost:5000\";\n\n// Initialize the fingerprint agent\nconst fpPromise = FingerprintJS.load();\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [recipient, setRecipient] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [connected, setConnected] = useState(false);\n  const [status, setStatus] = useState('Checking relay status...');\n  const [deviceId, setDeviceId] = useState('');\n  const [connectionDetails, setConnectionDetails] = useState({});\n  const [showConnectionInfo, setShowConnectionInfo] = useState(false);\n  const [securityAlert, setSecurityAlert] = useState(null);\n  const [typing, setTyping] = useState(false);\n  const [relayServerUrl, setRelayServerUrl] = useState('Unknown');\n  const [availableRelays, setAvailableRelays] = useState([]);\n  const [activeRelay, setActiveRelay] = useState(null);\n  const [relayConnection, setRelayConnection] = useState(null);\n  const [relayStatus, setRelayStatus] = useState('checking');\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [recipientStatus, setRecipientStatus] = useState({ exists: false, online: false });\n  const [isCheckingUsername, setIsCheckingUsername] = useState(false);\n  const [usernameAvailable, setUsernameAvailable] = useState(true);\n  \n  // Encryption state\n  const [encryptionEnabled, setEncryptionEnabled] = useState(true);\n  const [keyPair, setKeyPair] = useState(null);\n  const [publicKeyBase64, setPublicKeyBase64] = useState(null);\n  const [contactKeys, setContactKeys] = useState({});\n  const [pendingMessages, setPendingMessages] = useState([]);\n  const [showNewDeviceWarning, setShowNewDeviceWarning] = useState(false);\n  const [newDeviceUsername, setNewDeviceUsername] = useState('');\n  const [offlineMessageEnabled, setOfflineMessageEnabled] = useState(true);\n  \n  const socketRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n  const pingIntervalRef = useRef(null);\n  const encryptionKeyRef = useRef({});\n  const pendingKeyExchangeRef = useRef([]);\n\n  // Get device fingerprint and initialize encryption on component mount\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        // Generate device fingerprint\n        const fp = await fpPromise;\n        const result = await fp.get();\n        const visitorId = result.visitorId;\n        setDeviceId(visitorId);\n        localStorage.setItem('deviceId', visitorId);\n        \n        // Initialize encryption keys\n        const storedKeyPair = localStorage.getItem('keyPair');\n        if (storedKeyPair) {\n          // Use existing keys if available\n          const parsedKeyPair = JSON.parse(storedKeyPair);\n          setKeyPair(parsedKeyPair);\n          const importedPublicKey = await EncryptionUtils.importPublicKey(parsedKeyPair.publicKey);\n          const exportedPublicKeyBase64 = await EncryptionUtils.exportPublicKeyBase64(importedPublicKey);\n          setPublicKeyBase64(exportedPublicKeyBase64);\n        } else {\n          // Generate new keys if none exist\n          const newKeyPair = await EncryptionUtils.generateKeyPair();\n          const publicKeyJwk = await EncryptionUtils.exportKeyToJwk(newKeyPair.publicKey);\n          const privateKeyJwk = await EncryptionUtils.exportKeyToJwk(newKeyPair.privateKey);\n          \n          const keyPairToStore = {\n            publicKey: publicKeyJwk,\n            privateKey: privateKeyJwk\n          };\n          \n          localStorage.setItem('keyPair', JSON.stringify(keyPairToStore));\n          setKeyPair(keyPairToStore);\n          \n          const exportedPublicKeyBase64 = await EncryptionUtils.exportPublicKeyBase64(newKeyPair.publicKey);\n          setPublicKeyBase64(exportedPublicKeyBase64);\n        }\n        \n        // Load stored contact keys\n        const storedContactKeys = localStorage.getItem('contactKeys');\n        if (storedContactKeys) {\n          setContactKeys(JSON.parse(storedContactKeys));\n        }\n        \n        // Load pending messages\n        const storedPendingMessages = localStorage.getItem('pendingMessages');\n        if (storedPendingMessages) {\n          setPendingMessages(JSON.parse(storedPendingMessages));\n        }\n      } catch (error) {\n        console.error('Error initializing app:', error);\n        setStatus('Error initializing encryption. Please refresh.');\n      }\n    };\n    \n    initializeApp();\n  }, []);\n\n  // Check relay status on initial load\n  useEffect(() => {\n    if (deviceId) {\n      checkRelayStatus();\n    }\n  }, [deviceId]);\n\n  // Function to check relay status\n  const checkRelayStatus = async () => {\n    setStatus('Checking base node status...');\n    setRelayStatus('checking');\n    \n    try {\n      // First try HTTP health check\n      const response = await axios.get(`${BASE_NODE_URL}/health`, { \n        timeout: 5000 \n      });\n      \n      if (response.status === 200) {\n        setRelayStatus('online');\n        setStatus('Base node online. Please login.');\n        return;\n      }\n    } catch (error) {\n      console.log('HTTP health check failed, trying socket connection:', error.message);\n    }\n    \n    // Fallback to socket connection test\n    const tempSocket = io(BASE_NODE_URL, {\n      transports: ['websocket', 'polling'],\n      reconnectionAttempts: 2,\n      reconnectionDelay: 1000,\n      timeout: 5000,\n      forceNew: true\n    });\n    \n    const connectionTimeout = setTimeout(() => {\n      setRelayStatus('timeout');\n      setStatus('Connection timeout. Base node may be offline.');\n      tempSocket.disconnect();\n    }, 8000);\n    \n    tempSocket.on('connect', () => {\n      clearTimeout(connectionTimeout);\n      setRelayStatus('online');\n      setStatus('Base node online. Please login.');\n      tempSocket.disconnect();\n    });\n    \n    tempSocket.on('connect_error', (err) => {\n      clearTimeout(connectionTimeout);\n      console.error('Socket connection error:', err);\n      setRelayStatus('offline');\n      setStatus('Base node offline. Please try again later.');\n      tempSocket.disconnect();\n    });\n  };\n\n  // Main socket connection effect\n  useEffect(() => {\n    if (connected && username && deviceId) {\n      connectToBaseNode();\n    }\n    \n    return () => {\n      if (socketRef.current) {\n        clearInterval(pingIntervalRef.current);\n        socketRef.current.disconnect();\n        socketRef.current = null;\n      }\n    };\n  }, [connected, username, deviceId]);\n\n  const connectToBaseNode = () => {\n    // Clear any previous connection\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    \n    console.log('Connecting to base node:', BASE_NODE_URL);\n    setStatus('Connecting to base node...');\n    \n    socketRef.current = io(BASE_NODE_URL, {\n      transports: ['websocket', 'polling'],\n      reconnectionAttempts: 5,\n      reconnectionDelay: 2000,\n      query: { \n        deviceId,\n        username \n      },\n      forceNew: true\n    });\n    \n    // Connection event handlers\n    socketRef.current.on('connect', () => {\n      console.log('Connected to base node with socket ID:', socketRef.current.id);\n      setStatus('Connected to base node');\n      setConnectionDetails({\n        socketId: socketRef.current.id,\n        transport: socketRef.current.io.engine.transport.name,\n        baseNodeUrl: BASE_NODE_URL\n      });\n      \n      // Register with base node\n      socketRef.current.emit('registerUser', { \n        username, \n        deviceId \n      }, (response) => {\n        console.log('Registration response:', response);\n        if (response && response.success) {\n          setStatus('Registered successfully');\n          \n          // Get initial data\n          getOnlineUsers();\n          \n          // Get available relay servers\n          getAvailableRelays();\n          \n          startPingInterval();\n          \n        } else {\n          const errorMsg = response?.reason || 'Registration failed';\n          setStatus(`Registration failed: ${errorMsg}`);\n          setSecurityAlert({\n            username: username,\n            message: `Registration failed: ${errorMsg}`\n          });\n        }\n      });\n    });\n    \n    socketRef.current.on('connect_error', (err) => {\n      console.error('Base node connection error:', err);\n      setStatus(`Connection failed: ${err.message}`);\n      setRelayStatus('offline');\n    });\n    \n    socketRef.current.on('disconnect', (reason) => {\n      console.log('Disconnected from base node:', reason);\n      setStatus(`Disconnected: ${reason}`);\n      setRelayStatus('offline');\n      clearInterval(pingIntervalRef.current);\n      \n      // Don't auto-reconnect if user manually disconnected\n      if (reason !== 'io client disconnect') {\n        setTimeout(() => {\n          if (connected) {\n            connectToBaseNode();\n          }\n        }, 3000);\n      }\n    });\n    \n    // Message handling\n    socketRef.current.on('message', (data) => {\n      console.log('Received message:', data);\n      const { from, message, fromDeviceId, timestamp } = data;\n      \n      // Security check for device ID changes\n      const previousMessages = messages.filter(msg => msg.from === from);\n      if (previousMessages.length > 0 && previousMessages[0].fromDeviceId && \n          previousMessages[0].fromDeviceId !== fromDeviceId) {\n        setSecurityAlert({\n          username: from,\n          message: `Warning: ${from} appears to be messaging from a different device!`\n        });\n      }\n      \n      setMessages(msgs => [...msgs, { \n        from, \n        message, \n        fromDeviceId, \n        timestamp: new Date(timestamp || new Date()) \n      }]);\n    });\n    \n    // Handle relay server list updates\n    socketRef.current.on('relayList', (relays) => {\n      console.log('Received relay list:', relays);\n      setAvailableRelays(relays);\n      \n      // If we're not connected to a relay yet, connect to the best one\n      if (!activeRelay && relays.length > 0) {\n        connectToRelay(relays[0]);\n      }\n    });\n    \n    // Handle relay status updates\n    socketRef.current.on('relayStatusUpdate', (data) => {\n      console.log('Relay status update:', data);\n      const { relayId, status } = data;\n      \n      setAvailableRelays(prev => {\n        const updated = prev.map(relay => {\n          if (relay.relayId === relayId) {\n            return { ...relay, status };\n          }\n          return relay;\n        });\n        \n        // If the relay we're connected to went offline, connect to another one\n        if (activeRelay && activeRelay.relayId === relayId && status === 'offline') {\n          const onlineRelays = updated.filter(r => r.status === 'online');\n          if (onlineRelays.length > 0) {\n            // Schedule a reconnect to avoid doing it during this state update\n            setTimeout(() => connectToRelay(onlineRelays[0]), 100);\n          }\n        }\n        \n        return updated;\n      });\n    });\n    \n    // User status updates\n    socketRef.current.on('userStatusUpdate', (data) => {\n      console.log('User status update:', data);\n      const { username: user, online } = data;\n      \n      if (user === recipient) {\n        setRecipientStatus(prev => ({ ...prev, online }));\n      }\n      \n      // Update online users list\n      setOnlineUsers(prev => {\n        if (online && !prev.includes(user)) {\n          return [...prev, user];\n        } else if (!online && prev.includes(user)) {\n          return prev.filter(u => u !== user);\n        }\n        return prev;\n      });\n    });\n    \n    // Typing indicators\n    socketRef.current.on('userTyping', (data) => {\n      const { username: typingUser } = data;\n      if (typingUser === recipient) {\n        setTyping(true);\n        clearTimeout(typingTimeoutRef.current);\n        typingTimeoutRef.current = setTimeout(() => setTyping(false), 3000);\n      }\n    });\n    \n    // Error handling\n    socketRef.current.on('error', (error) => {\n      console.error('Socket error:', error);\n      setSecurityAlert({\n        username: 'System',\n        message: `Connection error: ${error.message || 'Unknown error'}`\n      });\n    });\n  };\n\n  const getOnlineUsers = () => {\n    if (socketRef.current) {\n      socketRef.current.emit('getOnlineUsers', {}, (users) => {\n        console.log('Online users:', users);\n        if (Array.isArray(users)) {\n          setOnlineUsers(users);\n        }\n      });\n    }\n  };\n  \n  // Get available relay servers from base node\n  const getAvailableRelays = () => {\n    if (socketRef.current) {\n      socketRef.current.emit('getRelays', {}, (relays) => {\n        console.log('Available relays:', relays);\n        if (Array.isArray(relays)) {\n          setAvailableRelays(relays);\n          \n          // Connect to the first available relay if we're not connected to any\n          const onlineRelays = relays.filter(relay => relay.status === 'online');\n          if (onlineRelays.length > 0 && !activeRelay) {\n            connectToRelay(onlineRelays[0]);\n          }\n        }\n      });\n    }\n  };\n  \n  // Connect to a relay server\n  const connectToRelay = (relay) => {\n    // Disconnect from current relay if connected\n    if (relayConnection) {\n      relayConnection.disconnect();\n      setRelayConnection(null);\n    }\n    \n    const relayUrl = `http://${relay.ip}:${relay.port}`;\n    console.log(`Connecting to relay server: ${relayUrl}`);\n    setStatus(`Connecting to relay: ${relay.relayId}...`);\n    setRelayServerUrl(relayUrl);\n    \n    const socket = io(relayUrl, {\n      transports: ['websocket', 'polling'],\n      reconnectionAttempts: 5,\n      reconnectionDelay: 2000,\n      query: { \n        deviceId,\n        username \n      },\n      forceNew: true\n    });\n    \n    socket.on('connect', () => {\n      console.log(`Connected to relay ${relay.relayId} with socket ID: ${socket.id}`);\n      setStatus(`Connected to relay: ${relay.relayId}`);\n      \n      // Register with the relay\n      socket.emit('register', { \n        username, \n        deviceId \n      }, (response) => {\n        console.log('Relay registration response:', response);\n        if (response && response.success) {\n          setActiveRelay(relay);\n          setRelayConnection(socket);\n          setStatus(`Registered with relay: ${relay.relayId}`);\n          \n          // Store relay info for future use\n          localStorage.setItem('lastRelay', JSON.stringify(relay));\n        } else {\n          const errorMsg = response?.reason || 'Registration with relay failed';\n          setStatus(`Relay registration failed: ${errorMsg}`);\n          socket.disconnect();\n        }\n      });\n    });\n    \n    socket.on('connect_error', (err) => {\n      console.error(`Relay connection error: ${err.message}`);\n      setStatus(`Relay connection failed: ${err.message}`);\n      \n      // Try another relay if available\n      const otherRelays = availableRelays.filter(r => \n        r.relayId !== relay.relayId && r.status === 'online'\n      );\n      \n      if (otherRelays.length > 0) {\n        setTimeout(() => connectToRelay(otherRelays[0]), 1000);\n      } else {\n        setStatus('No available relays. Using base node directly.');\n      }\n    });\n    \n    socket.on('disconnect', (reason) => {\n      console.log(`Disconnected from relay: ${reason}`);\n      setStatus(`Disconnected from relay: ${reason}`);\n      setActiveRelay(null);\n      \n      // Try to reconnect to another relay if available\n      const onlineRelays = availableRelays.filter(r => r.status === 'online');\n      if (onlineRelays.length > 0) {\n        setTimeout(() => connectToRelay(onlineRelays[0]), 2000);\n      }\n    });\n    \n    // Message handling\n    socket.on('receiveMessage', (data) => {\n      console.log('Received message from relay:', data);\n      const { from, message, fromDeviceId, timestamp } = data;\n      \n      // Security check for device ID changes\n      const previousMessages = messages.filter(msg => msg.from === from);\n      if (previousMessages.length > 0 && previousMessages[0].fromDeviceId && \n          previousMessages[0].fromDeviceId !== fromDeviceId) {\n        setSecurityAlert({\n          username: from,\n          message: `Warning: ${from} appears to be messaging from a different device!`\n        });\n      }\n      \n      setMessages(msgs => [...msgs, { \n        from, \n        message, \n        fromDeviceId, \n        timestamp: new Date(timestamp || new Date()) \n      }]);\n    });\n    \n    // Typing indicators\n    socket.on('userTyping', (data) => {\n      const { username: typingUser } = data;\n      if (typingUser === recipient) {\n        setTyping(true);\n        clearTimeout(typingTimeoutRef.current);\n        typingTimeoutRef.current = setTimeout(() => setTyping(false), 3000);\n      }\n    });\n    \n    return socket;\n  };\n\n  const startPingInterval = () => {\n    pingIntervalRef.current = setInterval(() => {\n      if (socketRef.current && socketRef.current.connected) {\n        socketRef.current.emit('ping', {}, (response) => {\n          if (response) {\n            console.log('Ping response:', response);\n          }\n        });\n      }\n    }, 30000);\n  };\n\n  // Check recipient status\n  const checkRecipientStatus = () => {\n    if (!recipient) {\n      setRecipientStatus({ exists: false, online: false });\n      return;\n    }\n    \n    // Check through relay if connected, otherwise through base node\n    const socket = relayConnection || socketRef.current;\n    \n    if (!socket) {\n      setRecipientStatus({ exists: false, online: false });\n      return;\n    }\n    \n    const checkMethod = relayConnection ? 'checkRecipient' : 'checkUser';\n    \n    socket.emit(checkMethod, { username: recipient }, (response) => {\n      console.log('Recipient check response:', response);\n      setRecipientStatus(response || { exists: false, online: false });\n    });\n  };\n\n  // Effect to check recipient status whenever recipient changes\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (connected && recipient) {\n        checkRecipientStatus();\n      }\n    }, 500); // Debounce\n    \n    return () => clearTimeout(timeoutId);\n  }, [connected, recipient]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleUsernameSubmit = (e) => {\n    e.preventDefault();\n    if (username.trim() && relayStatus === 'online') {\n      setConnected(true);\n    } else if (relayStatus !== 'online') {\n      setSecurityAlert({\n        username: 'System',\n        message: 'Cannot connect: Base node is offline'\n      });\n    }\n  };\n\n  const handleRecipientChange = (e) => {\n    setRecipient(e.target.value.trim());\n  };\n\n  const handleSend = (e) => {\n    e.preventDefault();\n    if (!recipient || !message.trim()) return;\n    \n    const messageData = {\n      to: recipient,\n      message: message.trim(),\n      deviceId,\n      timestamp: new Date().toISOString()\n    };\n    \n    console.log('Sending message:', messageData);\n    \n    // Send through relay if connected, otherwise through base node\n    const socket = relayConnection || socketRef.current;\n    \n    if (!socket) {\n      setSecurityAlert({\n        username: 'System',\n        message: 'No active connection to send message'\n      });\n      return;\n    }\n    \n    // Log connection details before sending\n    console.log(`Connection established. Sending through ${relayConnection ? 'relay' : 'base node'}...`);\n    \n    socket.emit('sendMessage', messageData, (response) => {\n      console.log('Send message response:', response);\n      \n      if (response && (response.success || response.delivered)) {\n        // Add message to local state\n        setMessages(msgs => [...msgs, { \n          from: username, \n          message: message.trim(), \n          fromDeviceId: deviceId, \n          timestamp: new Date() \n        }]);\n        setMessage('');\n      } else {\n        const errorMsg = response?.reason || 'Message delivery failed';\n        setSecurityAlert({\n          username: recipient,\n          message: `Failed to send message: ${errorMsg}`\n        });\n      }\n    });\n  };\n\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n    \n    // Send typing indicator through relay if connected, otherwise through base node\n    const socket = relayConnection || socketRef.current;\n    \n    if (socket && recipient && e.target.value.length > 0) {\n      socket.emit('typing', { to: recipient });\n    }\n  };\n\n  const handleDisconnect = () => {\n    setConnected(false);\n    \n    // Disconnect from relay if connected\n    if (relayConnection) {\n      relayConnection.disconnect();\n      setRelayConnection(null);\n      setActiveRelay(null);\n    }\n    \n    // Disconnect from base node\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    \n    setMessages([]);\n    setOnlineUsers([]);\n    setRecipientStatus({ exists: false, online: false });\n    setStatus('Disconnected');\n    \n    // Clear stored relay info\n    localStorage.removeItem('lastRelay');\n  };\n\n  const dismissAlert = () => {\n    setSecurityAlert(null);\n  };\n\n  const retryConnection = () => {\n    checkRelayStatus();\n  };\n\n  // Utility functions\n  const getTimestamp = () => {\n    const now = new Date();\n    return `[${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}]`;\n  };\n\n  const formatMessageTime = (timestamp) => {\n    if (!timestamp) return getTimestamp();\n    const date = new Date(timestamp);\n    return `[${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}:${date.getSeconds().toString().padStart(2, '0')}]`;\n  };\n\n  return (\n    <div style={{ \n      background: '#0a0e14', \n      minHeight: '100vh', \n      color: '#a2aabc', \n      display: 'flex', \n      alignItems: 'center', \n      justifyContent: 'center',\n      fontFamily: '\"Fira Code\", monospace'\n    }}>\n      <div style={{ \n        background: '#171c28', \n        padding: 32, \n        borderRadius: 8, \n        minWidth: 400,\n        maxWidth: 600,\n        boxShadow: '0 4px 30px rgba(0, 255, 170, 0.15)',\n        border: '1px solid rgba(0, 255, 170, 0.3)'\n      }}>\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'space-between', \n          alignItems: 'center',\n          marginBottom: 24 \n        }}>\n          <h2 style={{ \n            margin: 0, \n            color: '#5ccfe6', \n            fontFamily: '\"Fira Code\", monospace',\n            letterSpacing: '1px'\n          }}>WhisperNet_</h2>\n          <div style={{ \n            fontSize: 12, \n            padding: '4px 8px', \n            borderRadius: 4, \n            background: relayStatus === 'online' ? '#1c4b3c' : '#4b1c1c',\n            color: relayStatus === 'online' ? '#5ccfe6' : '#ff8f40',\n            cursor: 'pointer'\n          }} onClick={() => setShowConnectionInfo(!showConnectionInfo)}>\n          </div>\n        </div>\n        \n        {showConnectionInfo && (\n          <div style={{ \n            background: '#0d1117', \n            padding: 12, \n            borderRadius: 4, \n            fontSize: 12, \n            fontFamily: 'monospace',\n            marginBottom: 16,\n            border: '1px solid #1e2d3d'\n          }}>\n            <div>Status: {status}</div>\n            {connected && (\n              <>\n                <div>Socket ID: {connectionDetails.socketId || 'unknown'}</div>\n                <div>Transport: {connectionDetails.transport || 'unknown'}</div>\n                <div>Base Node: {connectionDetails.baseNodeUrl || BASE_NODE_URL}</div>\n              </>\n            )}\n            <div>Base Node Status: <span style={{\n              color: relayStatus === 'online' ? '#bae67e' : '#ff8f40'\n            }}>{relayStatus}</span></div>\n            {deviceId && <div>Device ID: {deviceId.substring(0, 8)}...</div>}\n            {connected && onlineUsers.length > 0 && (\n              <div style={{ marginTop: 8 }}>Online Users: {onlineUsers.join(', ')}</div>\n            )}\n          </div>\n        )}\n        \n        {securityAlert && (\n          <div style={{ \n            background: '#4b1c1c', \n            color: '#ff8f40', \n            padding: 12, \n            borderRadius: 4, \n            marginBottom: 16,\n            position: 'relative',\n            fontSize: 14\n          }}>\n            <div style={{ marginRight: 20 }}>{securityAlert.message}</div>\n            <button \n              style={{ \n                position: 'absolute', \n                top: 8, \n                right: 8, \n                background: 'none', \n                border: 'none', \n                color: '#ff8f40', \n                cursor: 'pointer',\n                fontSize: 16\n              }}\n              onClick={dismissAlert}\n            >\n              ×\n            </button>\n          </div>\n        )}\n        \n        {!connected ? (\n          <div>\n            <div style={{ marginBottom: 16, fontSize: 14, color: '#5ccfe6' }}>\n              {getTimestamp()} Initializing secure connection...\n            </div>\n            <form onSubmit={handleUsernameSubmit}>\n              <input\n                style={{ \n                  width: '100%', \n                  padding: 10, \n                  marginBottom: 12, \n                  borderRadius: 4, \n                  border: '1px solid #1e2d3d', \n                  background: '#0d1117',\n                  color: '#a2aabc',\n                  fontSize: 16,\n                  fontFamily: '\"Fira Code\", monospace',\n                  boxSizing: 'border-box'\n                }}\n                placeholder=\"Enter username\"\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                required\n              />\n              <button \n                style={{ \n                  width: '100%', \n                  padding: 10, \n                  borderRadius: 4, \n                  background: relayStatus === 'online' ? \n                    'linear-gradient(90deg, #5ccfe6, #bae67e)' : \n                    '#636b78',\n                  color: '#171c28', \n                  fontWeight: 'bold', \n                  fontSize: 16, \n                  border: 'none',\n                  cursor: relayStatus === 'online' ? 'pointer' : 'not-allowed',\n                  fontFamily: '\"Fira Code\", monospace'\n                }} \n                type=\"submit\"\n                disabled={relayStatus !== 'online'}\n              >\n                {relayStatus === 'online' ? 'AUTHENTICATE' : 'BASE NODE OFFLINE'}\n              </button>\n            </form>\n            {relayStatus !== 'online' && (\n              <button \n                style={{ \n                  width: '100%', \n                  padding: 8, \n                  marginTop: 8,\n                  borderRadius: 4, \n                  background: '#4b1c1c', \n                  color: '#ff8f40', \n                  fontSize: 14, \n                  border: 'none',\n                  cursor: 'pointer',\n                  fontFamily: '\"Fira Code\", monospace'\n                }} \n                onClick={retryConnection}\n              >\n                RETRY CONNECTION\n              </button>\n            )}\n            <div style={{ marginTop: 12, color: '#ff3333', textAlign: 'center', fontSize: 14 }}>\n              {status}\n            </div>\n          </div>\n        ) : (\n          <>\n            <form onSubmit={handleSend} style={{ display: 'flex', flexDirection: 'column', marginBottom: 16 }}>\n              <div style={{ display: 'flex', marginBottom: 8 }}>\n                <input\n                  style={{ \n                    flex: 1, \n                    padding: 10, \n                    borderRadius: 4, \n                    border: '1px solid #1e2d3d', \n                    background: '#0d1117',\n                    color: '#a2aabc',\n                    fontSize: 14,\n                    marginRight: 8,\n                    fontFamily: '\"Fira Code\", monospace'\n                  }}\n                  placeholder=\"Recipient username\"\n                  value={recipient}\n                  onChange={handleRecipientChange}\n                  required\n                />\n                {recipient && (\n                  <div style={{ \n                    display: 'flex', \n                    alignItems: 'center', \n                    marginLeft: 8,\n                    fontSize: 12\n                  }}>\n                    <div style={{ \n                      width: 8, \n                      height: 8, \n                      borderRadius: '50%', \n                      background: recipientStatus.online ? '#bae67e' : \n                                 recipientStatus.exists ? '#ff8f40' : '#ff3333',\n                      marginRight: 6 \n                    }}></div>\n                    {recipientStatus.exists \n                      ? (recipientStatus.online ? 'ONLINE' : 'OFFLINE') \n                      : 'NOT FOUND'}\n                  </div>\n                )}\n              </div>\n              <div style={{ display: 'flex' }}>\n                <input\n                  style={{ \n                    flex: 1, \n                    padding: 10, \n                    borderRadius: 4, \n                    border: '1px solid #1e2d3d', \n                    background: '#0d1117',\n                    color: '#a2aabc',\n                    fontSize: 14,\n                    marginRight: 8,\n                    fontFamily: '\"Fira Code\", monospace'\n                  }}\n                  placeholder=\"Type a message\"\n                  value={message}\n                  onChange={handleMessageChange}\n                  required\n                />\n                <button \n                  style={{ \n                    padding: '0 18px', \n                    borderRadius: 4, \n                    background: recipientStatus.online ? \n                      'linear-gradient(90deg, #5ccfe6, #bae67e)' : \n                      '#636b78', \n                    color: '#171c28', \n                    fontWeight: 'bold', \n                    fontSize: 14, \n                    border: 'none',\n                    cursor: recipientStatus.online ? 'pointer' : 'not-allowed',\n                    fontFamily: '\"Fira Code\", monospace'\n                  }} \n                  type=\"submit\"\n                  disabled={!recipientStatus.online}\n                >\n                  SEND\n                </button>\n              </div>\n            </form>\n            \n            {typing && recipient && (\n              <div style={{ fontSize: 12, color: '#5ccfe6', marginBottom: 8 }}>\n                {recipient} is typing...\n              </div>\n            )}\n            \n            <div style={{ \n              background: '#0d1117', \n              borderRadius: 4, \n              padding: 12, \n              minHeight: 200, \n              maxHeight: 350, \n              overflowY: 'auto', \n              marginBottom: 12,\n              border: '1px solid #1e2d3d',\n              fontFamily: 'monospace'\n            }}>\n              {messages.length === 0 ? (\n                <div style={{ color: '#5ccfe6', fontSize: 14 }}>\n                  {getTimestamp()} Connection established. Awaiting transmission...\n                </div>\n              ) : (\n                messages.map((msg, i) => (\n                  <div key={i} style={{ \n                    marginBottom: 12, \n                    padding: 8,\n                    borderRadius: 4,\n                    background: msg.from === username ? 'rgba(92, 207, 230, 0.1)' : 'rgba(186, 230, 126, 0.1)',\n                    borderLeft: msg.from === username ? '2px solid #5ccfe6' : '2px solid #bae67e'\n                  }}>\n                    <div style={{ \n                      display: 'flex', \n                      justifyContent: 'space-between', \n                      marginBottom: 4, \n                      fontSize: 12 \n                    }}>\n                      <span style={{ \n                        color: msg.from === username ? '#5ccfe6' : '#bae67e',\n                        fontWeight: 'bold'\n                      }}>\n                        {msg.from === username ? 'YOU' : msg.from}\n                      </span>\n                      <span style={{ color: '#636b78' }}>{formatMessageTime(msg.timestamp)}</span>\n                    </div>\n                    <div style={{ wordBreak: 'break-word', fontSize: 14 }}>{msg.message}</div>\n                  </div>\n                ))\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n            \n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <button \n                style={{ \n                  padding: '8px 16px', \n                  borderRadius: 4, \n                  background: '#4b1c1c', \n                  color: '#ff8f40', \n                  fontSize: 14, \n                  border: 'none',\n                  cursor: 'pointer',\n                  fontFamily: '\"Fira Code\", monospace'\n                }} \n                onClick={handleDisconnect}\n              >\n                DISCONNECT\n              </button>\n              \n              <div style={{ \n                fontSize: 12, \n                color: '#636b78', \n                display: 'flex', \n                alignItems: 'center' \n              }}>\n                <div style={{ \n                  width: 8, \n                  height: 8, \n                  borderRadius: '50%', \n                  background: status.includes('Connected') || status.includes('Registered') ? '#bae67e' : '#ff3333',\n                  marginRight: 6 \n                }}></div>\n                {status.includes('Connected') || status.includes('Registered') ? 'SECURE CONNECTION' : 'CONNECTION LOST'}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}