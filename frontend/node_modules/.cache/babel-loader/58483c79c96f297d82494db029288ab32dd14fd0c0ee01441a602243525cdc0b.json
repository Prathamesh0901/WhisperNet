{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siddharth\\\\Documents\\\\GitHub\\\\WhisperNet\\\\frontend\\\\src\\\\components\\\\ConnectionInfo.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConnectionInfo = ({\n  status,\n  connected,\n  connectionDetails,\n  relayServerUrl,\n  relayStatus,\n  deviceId,\n  BASE_NODE_URL\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: '#0d1117',\n      padding: 12,\n      borderRadius: 4,\n      fontSize: 12,\n      fontFamily: 'monospace',\n      marginBottom: 16,\n      border: '1px solid #1e2d3d'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), connected && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Socket ID: \", connectionDetails.socketId || 'unknown']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Transport: \", connectionDetails.transport || 'unknown']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Base Node: \", connectionDetails.baseNodeUrl || BASE_NODE_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Relay ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#5ccfe6'\n          },\n          children: relayServerUrl || 'Unknown'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Relay Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: connectionDetails.relayStatus === 'connected_to_base' ? '#bae67e' : connectionDetails.relayStatus === 'direct_to_base' ? '#5ccfe6' : '#ff8f40'\n          },\n          children: connectionDetails.relayStatus === 'connected_to_base' ? 'Connected to Base' : connectionDetails.relayStatus === 'direct_to_base' ? 'Direct to Base Node' : connectionDetails.relayStatus === 'assigned_by_base' ? 'Assigned by Base' : 'Standalone'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), connectionDetails.connectedUsers !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Users on Relay: \", connectionDetails.connectedUsers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), connectionDetails.ip && connectionDetails.port && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Relay Address: \", connectionDetails.ip, \":\", connectionDetails.port]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Base Node Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: relayStatus === 'online' ? '#bae67e' : '#ff8f40'\n        },\n        children: relayStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), deviceId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Device ID: \", deviceId.substring(0, 8), \"...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ConnectionInfo;\nexport default ConnectionInfo;\nvar _c;\n$RefreshReg$(_c, \"ConnectionInfo\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ConnectionInfo","status","connected","connectionDetails","relayServerUrl","relayStatus","deviceId","BASE_NODE_URL","style","background","padding","borderRadius","fontSize","fontFamily","marginBottom","border","children","fileName","_jsxFileName","lineNumber","columnNumber","socketId","transport","baseNodeUrl","color","connectedUsers","undefined","ip","port","substring","_c","$RefreshReg$"],"sources":["C:/Users/siddharth/Documents/GitHub/WhisperNet/frontend/src/components/ConnectionInfo.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst ConnectionInfo = ({\r\n  status,\r\n  connected,\r\n  connectionDetails,\r\n  relayServerUrl,\r\n  relayStatus,\r\n  deviceId,\r\n  BASE_NODE_URL\r\n}) => {\r\n  return (\r\n    <div style={{ \r\n      background: '#0d1117', \r\n      padding: 12, \r\n      borderRadius: 4, \r\n      fontSize: 12, \r\n      fontFamily: 'monospace',\r\n      marginBottom: 16,\r\n      border: '1px solid #1e2d3d'\r\n    }}>\r\n      <div>Status: {status}</div>\r\n      {connected && (\r\n        <>\r\n          <div>Socket ID: {connectionDetails.socketId || 'unknown'}</div>\r\n          <div>Transport: {connectionDetails.transport || 'unknown'}</div>\r\n          <div>Base Node: {connectionDetails.baseNodeUrl || BASE_NODE_URL}</div>\r\n          <div>Relay ID: <span style={{ color: '#5ccfe6' }}>{relayServerUrl || 'Unknown'}</span></div>\r\n          <div>Relay Status: <span style={{ \r\n            color: connectionDetails.relayStatus === 'connected_to_base' ? '#bae67e' : \r\n                   connectionDetails.relayStatus === 'direct_to_base' ? '#5ccfe6' : '#ff8f40' \r\n          }}>\r\n            {connectionDetails.relayStatus === 'connected_to_base' ? 'Connected to Base' : \r\n             connectionDetails.relayStatus === 'direct_to_base' ? 'Direct to Base Node' : \r\n             connectionDetails.relayStatus === 'assigned_by_base' ? 'Assigned by Base' : 'Standalone'}\r\n          </span></div>\r\n          {connectionDetails.connectedUsers !== undefined && (\r\n            <div>Users on Relay: {connectionDetails.connectedUsers}</div>\r\n          )}\r\n          {connectionDetails.ip && connectionDetails.port && (\r\n            <div>Relay Address: {connectionDetails.ip}:{connectionDetails.port}</div>\r\n          )}\r\n        </>\r\n      )}\r\n      <div>Base Node Status: <span style={{\r\n        color: relayStatus === 'online' ? '#bae67e' : '#ff8f40'\r\n      }}>{relayStatus}</span></div>\r\n      {deviceId && <div>Device ID: {deviceId.substring(0, 8)}...</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}